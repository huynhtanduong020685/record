{"version":3,"sources":["webpack:///./src/app/pages/sources/sources.module.ts","webpack:///./src/app/pages/sources/sources.page.html","webpack:///./src/app/pages/sources/sources.page.scss","webpack:///./src/app/pages/sources/sources.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEA;AAE7C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAWF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB9B,i2BAAi2B,WAAW,+FAA+F,aAAa,cAAc,iBAAiB,uHAAuH,oBAAoB,sc;;;;;;;;;;;ACAloC,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;ACAb;AACQ;AACjB;AACQ;AAOjD;IAIE,qBACU,WAAwB,EACxB,OAAgB,EAChB,eAAgC;QAFhC,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAS;QAChB,oBAAe,GAAf,eAAe,CAAiB;QAL1C,gBAAW,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC;QAC5B,SAAI,GAAG,EAAE,CAAC;IAKP,CAAC;IAEJ,8BAAQ,GAAR;QAAA,iBAKC;QAJC,sDAAsD;QACtD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,iBAAO;YACnD,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,kCAAY,GAAlB;;;;;4BACgB,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,OAAO,EAAE,qBAAqB;4BAC9B,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;;;KACjB;IAED,8BAAQ,GAAR,UAAS,MAAM;QAAf,iBAWC;QAVC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,aAAG;YACnC,IAAI,KAAK,GAAG,EAAE,CAAC;YACf,IAAI,GAAG,IAAI,IAAI,EAAE;gBACf,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACzB;YACD,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACnB,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACpD,KAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IApCU,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,qGAAkC;;SAEnC,CAAC;+EAMuB,kEAAW;YACf,sDAAO;YACC,8DAAe;OAP/B,WAAW,CAqCvB;IAAD,kBAAC;CAAA;AArCuB","file":"pages-sources-sources-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SourcesPage } from './sources.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SourcesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SourcesPage]\n})\nexport class SourcesPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Sources</ion-title>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n    <ion-searchbar [(ngModel)]=\\\"term\\\"></ion-searchbar>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-grid fixed>\\n    <ion-row *ngIf=\\\"!sources\\\">\\n      <ion-col size=12 *ngFor=\\\"let sources of fakeSources\\\">\\n        <ion-skeleton-text width=\\\"35%\\\"></ion-skeleton-text>\\n        <ion-skeleton-text width=\\\"70%\\\"></ion-skeleton-text>\\n        <ion-skeleton-text width=\\\"100%\\\"></ion-skeleton-text>\\n        <ion-skeleton-text width=\\\"80%\\\"></ion-skeleton-text>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row *ngIf=\\\"sources\\\">\\n      <ion-col size=12 size-md=\\\"6\\\" *ngFor=\\\"let source of sources\\\">\\n        <ion-list>\\n          <ion-item-sliding>\\n            <ion-item color=\\\"light\\\" href=\\\"/tabs/(sources:sources/{{source.id}})\\\">\\n              <ion-label text-wrap>\\n                <ion-text>\\n                  <h2>{{source.name}} <ion-badge>{{source.category}}</ion-badge>\\n                  </h2>\\n                </ion-text>\\n                <ion-text>\\n                  <p>{{source.description}}</p>\\n                </ion-text>\\n              </ion-label>\\n              <!-- <ion-icon name=\\\"arrow-forward\\\" slot=\\\"end\\\"></ion-icon> -->\\n            </ion-item>\\n            <ion-item-options side=\\\"start\\\">\\n              <ion-item-option (click)=\\\"favorite(source)\\\">Favorite</ion-item-option>\\n            </ion-item-options>\\n          </ion-item-sliding>\\n        </ion-list>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NvdXJjZXMvc291cmNlcy5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NewsService } from '../../services/news.service';\nimport { Storage } from '@ionic/storage';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-sources',\n  templateUrl: './sources.page.html',\n  styleUrls: ['./sources.page.scss']\n})\nexport class SourcesPage implements OnInit {\n  sources;\n  fakeSources = new Array(20);\n  term = '';\n  constructor(\n    private newsService: NewsService,\n    private storage: Storage,\n    private toastController: ToastController\n  ) {}\n\n  ngOnInit() {\n    // this.sources = this.newsService.getData('sources');\n    this.newsService.getData('sources').subscribe(sources => {\n      this.sources = sources['sources'];\n    });\n  }\n\n  async presentToast() {\n    const toast = await this.toastController.create({\n      message: 'Added To Favorites.',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  favorite(source) {\n    console.log(source);\n    this.storage.get('favorite').then(val => {\n      let items = [];\n      if (val != null) {\n        items = JSON.parse(val);\n      }\n      items.push(source);\n      this.storage.set('favorite', JSON.stringify(items));\n      this.presentToast();\n    });\n  }\n}\n"],"sourceRoot":""}